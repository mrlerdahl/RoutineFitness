// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoutineFitness.Models;

namespace RoutineFitness.Migrations
{
    [DbContext(typeof(RoutineFitnessContext))]
    partial class RoutineFitnessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoutineFitness.Models.Account", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RoutineFitness.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LiftId");

                    b.Property<string>("Note");

                    b.Property<int>("Reps");

                    b.Property<int>("Sets");

                    b.Property<int>("Weight");

                    b.Property<int>("WorkoutId");

                    b.HasKey("ActivityId");

                    b.HasIndex("LiftId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("RoutineFitness.Models.Lift", b =>
                {
                    b.Property<int>("LiftId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LiftDescription")
                        .IsRequired();

                    b.Property<string>("LiftName")
                        .IsRequired();

                    b.Property<string>("VideoUrl");

                    b.HasKey("LiftId");

                    b.ToTable("Lifts");
                });

            modelBuilder.Entity("RoutineFitness.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.Property<int>("WorkoutId");

                    b.Property<string>("WorkoutName");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("RoutineFitness.Models.Activity", b =>
                {
                    b.HasOne("RoutineFitness.Models.Lift", "Lift")
                        .WithMany("Activities")
                        .HasForeignKey("LiftId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoutineFitness.Models.Workout", "Workout")
                        .WithMany("Activities")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RoutineFitness.Models.Workout", b =>
                {
                    b.HasOne("RoutineFitness.Models.Account", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
